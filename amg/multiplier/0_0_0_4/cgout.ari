typedef UB;
  for (i, UB.low, UB.high) begin
    UB{i}.weight = Power(2,i);
    UB{i}.min = 0;
    UB{i}.max = 1;
    UB{i}.step = 1;
  end
endtypedef

module UB1BPPG_0_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 0; O.low = 0;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 1; O.low = 1;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 2; O.low = 2;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 3; O.low = 3;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 4; O.low = 4;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 5; O.low = 5;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_0(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 0;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 0; IN2.low = 0;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_0 U0 (O{0}, IN1{0}, IN2);
    UB1BPPG_1_0 U1 (O{1}, IN1{1}, IN2);
    UB1BPPG_2_0 U2 (O{2}, IN1{2}, IN2);
    UB1BPPG_3_0 U3 (O{3}, IN1{3}, IN2);
    UB1BPPG_4_0 U4 (O{4}, IN1{4}, IN2);
    UB1BPPG_5_0 U5 (O{5}, IN1{5}, IN2);
    UB1BPPG_6_0 U6 (O{6}, IN1{6}, IN2);
    UB1BPPG_7_0 U7 (O{7}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 1; O.low = 1;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 2; O.low = 2;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 3; O.low = 3;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 4; O.low = 4;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 5; O.low = 5;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_1(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 1;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 1; IN2.low = 1;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_1 U0 (O{1}, IN1{0}, IN2);
    UB1BPPG_1_1 U1 (O{2}, IN1{1}, IN2);
    UB1BPPG_2_1 U2 (O{3}, IN1{2}, IN2);
    UB1BPPG_3_1 U3 (O{4}, IN1{3}, IN2);
    UB1BPPG_4_1 U4 (O{5}, IN1{4}, IN2);
    UB1BPPG_5_1 U5 (O{6}, IN1{5}, IN2);
    UB1BPPG_6_1 U6 (O{7}, IN1{6}, IN2);
    UB1BPPG_7_1 U7 (O{8}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 2; O.low = 2;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 3; O.low = 3;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 4; O.low = 4;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 5; O.low = 5;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 9;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_2(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 2;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 2; IN2.low = 2;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_2 U0 (O{2}, IN1{0}, IN2);
    UB1BPPG_1_2 U1 (O{3}, IN1{1}, IN2);
    UB1BPPG_2_2 U2 (O{4}, IN1{2}, IN2);
    UB1BPPG_3_2 U3 (O{5}, IN1{3}, IN2);
    UB1BPPG_4_2 U4 (O{6}, IN1{4}, IN2);
    UB1BPPG_5_2 U5 (O{7}, IN1{5}, IN2);
    UB1BPPG_6_2 U6 (O{8}, IN1{6}, IN2);
    UB1BPPG_7_2 U7 (O{9}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 3; O.low = 3;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 4; O.low = 4;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 5; O.low = 5;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 9;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 10; O.low = 10;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_3(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 10; O.low = 3;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 3; IN2.low = 3;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_3 U0 (O{3}, IN1{0}, IN2);
    UB1BPPG_1_3 U1 (O{4}, IN1{1}, IN2);
    UB1BPPG_2_3 U2 (O{5}, IN1{2}, IN2);
    UB1BPPG_3_3 U3 (O{6}, IN1{3}, IN2);
    UB1BPPG_4_3 U4 (O{7}, IN1{4}, IN2);
    UB1BPPG_5_3 U5 (O{8}, IN1{5}, IN2);
    UB1BPPG_6_3 U6 (O{9}, IN1{6}, IN2);
    UB1BPPG_7_3 U7 (O{10}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 4; O.low = 4;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 5; O.low = 5;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 9;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 10; O.low = 10;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 11; O.low = 11;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_4(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 11; O.low = 4;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 4; IN2.low = 4;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_4 U0 (O{4}, IN1{0}, IN2);
    UB1BPPG_1_4 U1 (O{5}, IN1{1}, IN2);
    UB1BPPG_2_4 U2 (O{6}, IN1{2}, IN2);
    UB1BPPG_3_4 U3 (O{7}, IN1{3}, IN2);
    UB1BPPG_4_4 U4 (O{8}, IN1{4}, IN2);
    UB1BPPG_5_4 U5 (O{9}, IN1{5}, IN2);
    UB1BPPG_6_4 U6 (O{10}, IN1{6}, IN2);
    UB1BPPG_7_4 U7 (O{11}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 5; O.low = 5;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 9;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 10; O.low = 10;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 11; O.low = 11;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 12; O.low = 12;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_5(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 12; O.low = 5;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 5; IN2.low = 5;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_5 U0 (O{5}, IN1{0}, IN2);
    UB1BPPG_1_5 U1 (O{6}, IN1{1}, IN2);
    UB1BPPG_2_5 U2 (O{7}, IN1{2}, IN2);
    UB1BPPG_3_5 U3 (O{8}, IN1{3}, IN2);
    UB1BPPG_4_5 U4 (O{9}, IN1{4}, IN2);
    UB1BPPG_5_5 U5 (O{10}, IN1{5}, IN2);
    UB1BPPG_6_5 U6 (O{11}, IN1{6}, IN2);
    UB1BPPG_7_5 U7 (O{12}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 6; O.low = 6;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 9;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 10; O.low = 10;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 11; O.low = 11;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 12; O.low = 12;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 13; O.low = 13;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_6(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 13; O.low = 6;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 6; IN2.low = 6;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_6 U0 (O{6}, IN1{0}, IN2);
    UB1BPPG_1_6 U1 (O{7}, IN1{1}, IN2);
    UB1BPPG_2_6 U2 (O{8}, IN1{2}, IN2);
    UB1BPPG_3_6 U3 (O{9}, IN1{3}, IN2);
    UB1BPPG_4_6 U4 (O{10}, IN1{4}, IN2);
    UB1BPPG_5_6 U5 (O{11}, IN1{5}, IN2);
    UB1BPPG_6_6 U6 (O{12}, IN1{6}, IN2);
    UB1BPPG_7_6 U7 (O{13}, IN1{7}, IN2);
  end
endmodule

module UB1BPPG_0_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 7; O.low = 7;
    IN1.high = 0; IN1.low = 0;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_1_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 8; O.low = 8;
    IN1.high = 1; IN1.low = 1;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_2_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 9; O.low = 9;
    IN1.high = 2; IN1.low = 2;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_3_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 10; O.low = 10;
    IN1.high = 3; IN1.low = 3;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_4_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 11; O.low = 11;
    IN1.high = 4; IN1.low = 4;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_5_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 12; O.low = 12;
    IN1.high = 5; IN1.low = 5;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_6_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 13; O.low = 13;
    IN1.high = 6; IN1.low = 6;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UB1BPPG_7_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 14; O.low = 14;
    IN1.high = 7; IN1.low = 7;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
endmodule

module UBVPPG_7_0_7(O, IN1, IN2);
  output UB O;
  input UB IN1;
  input UB IN2;
  constraint begin
    O.high = 14; O.low = 7;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 7; IN2.low = 7;
  end
  assertion O = IN1 * IN2;
  structure begin
    UB1BPPG_0_7 U0 (O{7}, IN1{0}, IN2);
    UB1BPPG_1_7 U1 (O{8}, IN1{1}, IN2);
    UB1BPPG_2_7 U2 (O{9}, IN1{2}, IN2);
    UB1BPPG_3_7 U3 (O{10}, IN1{3}, IN2);
    UB1BPPG_4_7 U4 (O{11}, IN1{4}, IN2);
    UB1BPPG_5_7 U5 (O{12}, IN1{5}, IN2);
    UB1BPPG_6_7 U6 (O{13}, IN1{6}, IN2);
    UB1BPPG_7_7 U7 (O{14}, IN1{7}, IN2);
  end
endmodule

module UBPPG_7_0_7_0(PP0, PP1, PP2, PP3, PP4, PP5, PP6, PP7, IN1, IN2);
  output UB PP0;
  output UB PP1;
  output UB PP2;
  output UB PP3;
  output UB PP4;
  output UB PP5;
  output UB PP6;
  output UB PP7;
  input UB IN1;
  input UB IN2;
  constraint begin
    PP0.high = 7; PP0.low = 0;
    PP1.high = 8; PP1.low = 1;
    PP2.high = 9; PP2.low = 2;
    PP3.high = 10; PP3.low = 3;
    PP4.high = 11; PP4.low = 4;
    PP5.high = 12; PP5.low = 5;
    PP6.high = 13; PP6.low = 6;
    PP7.high = 14; PP7.low = 7;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 7; IN2.low = 0;
  end
  assertion PP0 + PP1 + PP2 + PP3 + PP4 + PP5 + PP6 + PP7 = IN1 * IN2;
  structure begin
    UBVPPG_7_0_0 U0 (PP0, IN1, IN2{0});
    UBVPPG_7_0_1 U1 (PP1, IN1, IN2{1});
    UBVPPG_7_0_2 U2 (PP2, IN1, IN2{2});
    UBVPPG_7_0_3 U3 (PP3, IN1, IN2{3});
    UBVPPG_7_0_4 U4 (PP4, IN1, IN2{4});
    UBVPPG_7_0_5 U5 (PP5, IN1, IN2{5});
    UBVPPG_7_0_6 U6 (PP6, IN1, IN2{6});
    UBVPPG_7_0_7 U7 (PP7, IN1, IN2{7});
  end
endmodule

module UB1DCON_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 0; O.low = 0;
    I.high = 0; I.low = 0;
  end
  assertion O = I;
endmodule

module UBHA_1(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 2; C.low = 2;
    S.high = 1; S.low = 1;
    X.high = 1; X.low = 1;
    Y.high = 1; Y.low = 1;
  end
  assertion C + S = X + Y;
endmodule

module UBFA_2(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 3; C.low = 3;
    S.high = 2; S.low = 2;
    X.high = 2; X.low = 2;
    Y.high = 2; Y.low = 2;
    Z.high = 2; Z.low = 2;
  end
  assertion C + S = X + Y + Z;
endmodule

module UBFA_3(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 4; C.low = 4;
    S.high = 3; S.low = 3;
    X.high = 3; X.low = 3;
    Y.high = 3; Y.low = 3;
    Z.high = 3; Z.low = 3;
  end
  assertion C + S = X + Y + Z;
endmodule

module UBFA_4(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 5; C.low = 5;
    S.high = 4; S.low = 4;
    X.high = 4; X.low = 4;
    Y.high = 4; Y.low = 4;
    Z.high = 4; Z.low = 4;
  end
  assertion C + S = X + Y + Z;
endmodule

module UBFA_5(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 6; C.low = 6;
    S.high = 5; S.low = 5;
    X.high = 5; X.low = 5;
    Y.high = 5; Y.low = 5;
    Z.high = 5; Z.low = 5;
  end
  assertion C + S = X + Y + Z;
endmodule

module UBFA_6(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 7; C.low = 7;
    S.high = 6; S.low = 6;
    X.high = 6; X.low = 6;
    Y.high = 6; Y.low = 6;
    Z.high = 6; Z.low = 6;
  end
  assertion C + S = X + Y + Z;
endmodule

module UBFA_7(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 8; C.low = 8;
    S.high = 7; S.low = 7;
    X.high = 7; X.low = 7;
    Y.high = 7; Y.low = 7;
    Z.high = 7; Z.low = 7;
  end
  assertion C + S = X + Y + Z;
endmodule

module PureCSA_7_2(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 8; C.low = 3;
    S.high = 7; S.low = 2;
    X.high = 7; X.low = 2;
    Y.high = 7; Y.low = 2;
    Z.high = 7; Z.low = 2;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBFA_2 U0 (C{3}, S{2}, X{2}, Y{2}, Z{2});
    UBFA_3 U1 (C{4}, S{3}, X{3}, Y{3}, Z{3});
    UBFA_4 U2 (C{5}, S{4}, X{4}, Y{4}, Z{4});
    UBFA_5 U3 (C{6}, S{5}, X{5}, Y{5}, Z{5});
    UBFA_6 U4 (C{7}, S{6}, X{6}, Y{6}, Z{6});
    UBFA_7 U5 (C{8}, S{7}, X{7}, Y{7}, Z{7});
  end
endmodule

module UBHA_8(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 9; C.low = 9;
    S.high = 8; S.low = 8;
    X.high = 8; X.low = 8;
    Y.high = 8; Y.low = 8;
  end
  assertion C + S = X + Y;
endmodule

module UB1DCON_9(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 9; O.low = 9;
    I.high = 9; I.low = 9;
  end
  assertion O = I;
endmodule

module CSA_7_0_8_1_9_2(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 9; C.low = 2;
    S.high = 9; S.low = 0;
    X.high = 7; X.low = 0;
    Y.high = 8; Y.low = 1;
    Z.high = 9; Z.low = 2;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UB1DCON_0 U0 (S{0}, X{0});
    UBHA_1 U1 (C{2}, S{1}, Y{1}, X{1});
    PureCSA_7_2 U2 (C{8:3}, S{7:2}, Z{7:2}, Y{7:2}, X{7:2});
    UBHA_8 U3 (C{9}, S{8}, Z{8}, Y{8});
    UB1DCON_9 U4 (S{9}, Z{9});
  end
endmodule

module UB1DCON_1(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 1; O.low = 1;
    I.high = 1; I.low = 1;
  end
  assertion O = I;
endmodule

module UBCON_1_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 1; O.low = 0;
    I.high = 1; I.low = 0;
  end
  assertion O = I;
  structure begin
    UB1DCON_0 U0 (O{0}, I{0});
    UB1DCON_1 U1 (O{1}, I{1});
  end
endmodule

module UBHA_2(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 3; C.low = 3;
    S.high = 2; S.low = 2;
    X.high = 2; X.low = 2;
    Y.high = 2; Y.low = 2;
  end
  assertion C + S = X + Y;
endmodule

module UBFA_8(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 9; C.low = 9;
    S.high = 8; S.low = 8;
    X.high = 8; X.low = 8;
    Y.high = 8; Y.low = 8;
    Z.high = 8; Z.low = 8;
  end
  assertion C + S = X + Y + Z;
endmodule

module UBFA_9(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 10; C.low = 10;
    S.high = 9; S.low = 9;
    X.high = 9; X.low = 9;
    Y.high = 9; Y.low = 9;
    Z.high = 9; Z.low = 9;
  end
  assertion C + S = X + Y + Z;
endmodule

module PureCSA_9_3(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 10; C.low = 4;
    S.high = 9; S.low = 3;
    X.high = 9; X.low = 3;
    Y.high = 9; Y.low = 3;
    Z.high = 9; Z.low = 3;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBFA_3 U0 (C{4}, S{3}, X{3}, Y{3}, Z{3});
    UBFA_4 U1 (C{5}, S{4}, X{4}, Y{4}, Z{4});
    UBFA_5 U2 (C{6}, S{5}, X{5}, Y{5}, Z{5});
    UBFA_6 U3 (C{7}, S{6}, X{6}, Y{6}, Z{6});
    UBFA_7 U4 (C{8}, S{7}, X{7}, Y{7}, Z{7});
    UBFA_8 U5 (C{9}, S{8}, X{8}, Y{8}, Z{8});
    UBFA_9 U6 (C{10}, S{9}, X{9}, Y{9}, Z{9});
  end
endmodule

module UB1DCON_10(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 10; O.low = 10;
    I.high = 10; I.low = 10;
  end
  assertion O = I;
endmodule

module CSA_9_0_9_2_10_3(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 10; C.low = 3;
    S.high = 10; S.low = 0;
    X.high = 9; X.low = 0;
    Y.high = 9; Y.low = 2;
    Z.high = 10; Z.low = 3;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBCON_1_0 U0 (S{1:0}, X{1:0});
    UBHA_2 U1 (C{3}, S{2}, Y{2}, X{2});
    PureCSA_9_3 U2 (C{10:4}, S{9:3}, Z{9:3}, Y{9:3}, X{9:3});
    UB1DCON_10 U3 (S{10}, Z{10});
  end
endmodule

module UB1DCON_2(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 2; O.low = 2;
    I.high = 2; I.low = 2;
  end
  assertion O = I;
endmodule

module UBCON_2_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 2; O.low = 0;
    I.high = 2; I.low = 0;
  end
  assertion O = I;
  structure begin
    UB1DCON_0 U0 (O{0}, I{0});
    UB1DCON_1 U1 (O{1}, I{1});
    UB1DCON_2 U2 (O{2}, I{2});
  end
endmodule

module UBHA_3(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 4; C.low = 4;
    S.high = 3; S.low = 3;
    X.high = 3; X.low = 3;
    Y.high = 3; Y.low = 3;
  end
  assertion C + S = X + Y;
endmodule

module UBFA_10(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 11; C.low = 11;
    S.high = 10; S.low = 10;
    X.high = 10; X.low = 10;
    Y.high = 10; Y.low = 10;
    Z.high = 10; Z.low = 10;
  end
  assertion C + S = X + Y + Z;
endmodule

module PureCSA_10_4(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 11; C.low = 5;
    S.high = 10; S.low = 4;
    X.high = 10; X.low = 4;
    Y.high = 10; Y.low = 4;
    Z.high = 10; Z.low = 4;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBFA_4 U0 (C{5}, S{4}, X{4}, Y{4}, Z{4});
    UBFA_5 U1 (C{6}, S{5}, X{5}, Y{5}, Z{5});
    UBFA_6 U2 (C{7}, S{6}, X{6}, Y{6}, Z{6});
    UBFA_7 U3 (C{8}, S{7}, X{7}, Y{7}, Z{7});
    UBFA_8 U4 (C{9}, S{8}, X{8}, Y{8}, Z{8});
    UBFA_9 U5 (C{10}, S{9}, X{9}, Y{9}, Z{9});
    UBFA_10 U6 (C{11}, S{10}, X{10}, Y{10}, Z{10});
  end
endmodule

module UB1DCON_11(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 11; O.low = 11;
    I.high = 11; I.low = 11;
  end
  assertion O = I;
endmodule

module CSA_10_0_10_3_11_000(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 11; C.low = 4;
    S.high = 11; S.low = 0;
    X.high = 10; X.low = 0;
    Y.high = 10; Y.low = 3;
    Z.high = 11; Z.low = 4;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBCON_2_0 U0 (S{2:0}, X{2:0});
    UBHA_3 U1 (C{4}, S{3}, Y{3}, X{3});
    PureCSA_10_4 U2 (C{11:5}, S{10:4}, Z{10:4}, Y{10:4}, X{10:4});
    UB1DCON_11 U3 (S{11}, Z{11});
  end
endmodule

module UB1DCON_3(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 3; O.low = 3;
    I.high = 3; I.low = 3;
  end
  assertion O = I;
endmodule

module UBCON_3_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 3; O.low = 0;
    I.high = 3; I.low = 0;
  end
  assertion O = I;
  structure begin
    UB1DCON_0 U0 (O{0}, I{0});
    UB1DCON_1 U1 (O{1}, I{1});
    UB1DCON_2 U2 (O{2}, I{2});
    UB1DCON_3 U3 (O{3}, I{3});
  end
endmodule

module UBHA_4(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 5; C.low = 5;
    S.high = 4; S.low = 4;
    X.high = 4; X.low = 4;
    Y.high = 4; Y.low = 4;
  end
  assertion C + S = X + Y;
endmodule

module UBFA_11(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 12; C.low = 12;
    S.high = 11; S.low = 11;
    X.high = 11; X.low = 11;
    Y.high = 11; Y.low = 11;
    Z.high = 11; Z.low = 11;
  end
  assertion C + S = X + Y + Z;
endmodule

module PureCSA_11_5(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 12; C.low = 6;
    S.high = 11; S.low = 5;
    X.high = 11; X.low = 5;
    Y.high = 11; Y.low = 5;
    Z.high = 11; Z.low = 5;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBFA_5 U0 (C{6}, S{5}, X{5}, Y{5}, Z{5});
    UBFA_6 U1 (C{7}, S{6}, X{6}, Y{6}, Z{6});
    UBFA_7 U2 (C{8}, S{7}, X{7}, Y{7}, Z{7});
    UBFA_8 U3 (C{9}, S{8}, X{8}, Y{8}, Z{8});
    UBFA_9 U4 (C{10}, S{9}, X{9}, Y{9}, Z{9});
    UBFA_10 U5 (C{11}, S{10}, X{10}, Y{10}, Z{10});
    UBFA_11 U6 (C{12}, S{11}, X{11}, Y{11}, Z{11});
  end
endmodule

module UB1DCON_12(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 12; O.low = 12;
    I.high = 12; I.low = 12;
  end
  assertion O = I;
endmodule

module CSA_11_0_11_4_12_000(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 12; C.low = 5;
    S.high = 12; S.low = 0;
    X.high = 11; X.low = 0;
    Y.high = 11; Y.low = 4;
    Z.high = 12; Z.low = 5;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBCON_3_0 U0 (S{3:0}, X{3:0});
    UBHA_4 U1 (C{5}, S{4}, Y{4}, X{4});
    PureCSA_11_5 U2 (C{12:6}, S{11:5}, Z{11:5}, Y{11:5}, X{11:5});
    UB1DCON_12 U3 (S{12}, Z{12});
  end
endmodule

module UB1DCON_4(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 4; O.low = 4;
    I.high = 4; I.low = 4;
  end
  assertion O = I;
endmodule

module UBCON_4_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 4; O.low = 0;
    I.high = 4; I.low = 0;
  end
  assertion O = I;
  structure begin
    UB1DCON_0 U0 (O{0}, I{0});
    UB1DCON_1 U1 (O{1}, I{1});
    UB1DCON_2 U2 (O{2}, I{2});
    UB1DCON_3 U3 (O{3}, I{3});
    UB1DCON_4 U4 (O{4}, I{4});
  end
endmodule

module UBHA_5(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 6; C.low = 6;
    S.high = 5; S.low = 5;
    X.high = 5; X.low = 5;
    Y.high = 5; Y.low = 5;
  end
  assertion C + S = X + Y;
endmodule

module UBFA_12(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 13; C.low = 13;
    S.high = 12; S.low = 12;
    X.high = 12; X.low = 12;
    Y.high = 12; Y.low = 12;
    Z.high = 12; Z.low = 12;
  end
  assertion C + S = X + Y + Z;
endmodule

module PureCSA_12_6(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 13; C.low = 7;
    S.high = 12; S.low = 6;
    X.high = 12; X.low = 6;
    Y.high = 12; Y.low = 6;
    Z.high = 12; Z.low = 6;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBFA_6 U0 (C{7}, S{6}, X{6}, Y{6}, Z{6});
    UBFA_7 U1 (C{8}, S{7}, X{7}, Y{7}, Z{7});
    UBFA_8 U2 (C{9}, S{8}, X{8}, Y{8}, Z{8});
    UBFA_9 U3 (C{10}, S{9}, X{9}, Y{9}, Z{9});
    UBFA_10 U4 (C{11}, S{10}, X{10}, Y{10}, Z{10});
    UBFA_11 U5 (C{12}, S{11}, X{11}, Y{11}, Z{11});
    UBFA_12 U6 (C{13}, S{12}, X{12}, Y{12}, Z{12});
  end
endmodule

module UB1DCON_13(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 13; O.low = 13;
    I.high = 13; I.low = 13;
  end
  assertion O = I;
endmodule

module CSA_12_0_12_5_13_000(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 13; C.low = 6;
    S.high = 13; S.low = 0;
    X.high = 12; X.low = 0;
    Y.high = 12; Y.low = 5;
    Z.high = 13; Z.low = 6;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBCON_4_0 U0 (S{4:0}, X{4:0});
    UBHA_5 U1 (C{6}, S{5}, Y{5}, X{5});
    PureCSA_12_6 U2 (C{13:7}, S{12:6}, Z{12:6}, Y{12:6}, X{12:6});
    UB1DCON_13 U3 (S{13}, Z{13});
  end
endmodule

module UB1DCON_5(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 5; O.low = 5;
    I.high = 5; I.low = 5;
  end
  assertion O = I;
endmodule

module UBCON_5_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 5; O.low = 0;
    I.high = 5; I.low = 0;
  end
  assertion O = I;
  structure begin
    UB1DCON_0 U0 (O{0}, I{0});
    UB1DCON_1 U1 (O{1}, I{1});
    UB1DCON_2 U2 (O{2}, I{2});
    UB1DCON_3 U3 (O{3}, I{3});
    UB1DCON_4 U4 (O{4}, I{4});
    UB1DCON_5 U5 (O{5}, I{5});
  end
endmodule

module UBHA_6(C, S, X, Y);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    C.high = 7; C.low = 7;
    S.high = 6; S.low = 6;
    X.high = 6; X.low = 6;
    Y.high = 6; Y.low = 6;
  end
  assertion C + S = X + Y;
endmodule

module UBFA_13(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 14; C.low = 14;
    S.high = 13; S.low = 13;
    X.high = 13; X.low = 13;
    Y.high = 13; Y.low = 13;
    Z.high = 13; Z.low = 13;
  end
  assertion C + S = X + Y + Z;
endmodule

module PureCSA_13_7(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 14; C.low = 8;
    S.high = 13; S.low = 7;
    X.high = 13; X.low = 7;
    Y.high = 13; Y.low = 7;
    Z.high = 13; Z.low = 7;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBFA_7 U0 (C{8}, S{7}, X{7}, Y{7}, Z{7});
    UBFA_8 U1 (C{9}, S{8}, X{8}, Y{8}, Z{8});
    UBFA_9 U2 (C{10}, S{9}, X{9}, Y{9}, Z{9});
    UBFA_10 U3 (C{11}, S{10}, X{10}, Y{10}, Z{10});
    UBFA_11 U4 (C{12}, S{11}, X{11}, Y{11}, Z{11});
    UBFA_12 U5 (C{13}, S{12}, X{12}, Y{12}, Z{12});
    UBFA_13 U6 (C{14}, S{13}, X{13}, Y{13}, Z{13});
  end
endmodule

module UB1DCON_14(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 14; O.low = 14;
    I.high = 14; I.low = 14;
  end
  assertion O = I;
endmodule

module CSA_13_0_13_6_14_000(C, S, X, Y, Z);
  output UB C;
  output UB S;
  input UB X;
  input UB Y;
  input UB Z;
  constraint begin
    C.high = 14; C.low = 7;
    S.high = 14; S.low = 0;
    X.high = 13; X.low = 0;
    Y.high = 13; Y.low = 6;
    Z.high = 14; Z.low = 7;
  end
  assertion C + S = X + Y + Z;
  structure begin
    UBCON_5_0 U0 (S{5:0}, X{5:0});
    UBHA_6 U1 (C{7}, S{6}, Y{6}, X{6});
    PureCSA_13_7 U2 (C{14:8}, S{13:7}, Z{13:7}, Y{13:7}, X{13:7});
    UB1DCON_14 U3 (S{14}, Z{14});
  end
endmodule

module UBARYACC_7_0_8_1_000(S1, S2, PP0, PP1, PP2, PP3, PP4, PP5, PP6, PP7);
  output UB S1;
  output UB S2;
  input UB PP0;
  input UB PP1;
  input UB PP2;
  input UB PP3;
  input UB PP4;
  input UB PP5;
  input UB PP6;
  input UB PP7;
  constraint begin
    S1.high = 14; S1.low = 7;
    S2.high = 14; S2.low = 0;
    PP0.high = 7; PP0.low = 0;
    PP1.high = 8; PP1.low = 1;
    PP2.high = 9; PP2.low = 2;
    PP3.high = 10; PP3.low = 3;
    PP4.high = 11; PP4.low = 4;
    PP5.high = 12; PP5.low = 5;
    PP6.high = 13; PP6.low = 6;
    PP7.high = 14; PP7.low = 7;
  end
  assertion S1 + S2 = PP0 + PP1 + PP2 + PP3 + PP4 + PP5 + PP6 + PP7;
  structure begin
    wire UB IC0;
    wire UB IC1;
    wire UB IC2;
    wire UB IC3;
    wire UB IC4;
    wire UB IS0;
    wire UB IS1;
    wire UB IS2;
    wire UB IS3;
    wire UB IS4;
    constraint begin
      IC0.high = 9; IC0.low = 2;
      IC1.high = 10; IC1.low = 3;
      IC2.high = 11; IC2.low = 4;
      IC3.high = 12; IC3.low = 5;
      IC4.high = 13; IC4.low = 6;
      IS0.high = 9; IS0.low = 0;
      IS1.high = 10; IS1.low = 0;
      IS2.high = 11; IS2.low = 0;
      IS3.high = 12; IS3.low = 0;
      IS4.high = 13; IS4.low = 0;
    end
    CSA_7_0_8_1_9_2 U0 (IC0, IS0, PP0, PP1, PP2);
    CSA_9_0_9_2_10_3 U1 (IC1, IS1, IS0, IC0, PP3);
    CSA_10_0_10_3_11_000 U2 (IC2, IS2, IS1, IC1, PP4);
    CSA_11_0_11_4_12_000 U3 (IC3, IS3, IS2, IC2, PP5);
    CSA_12_0_12_5_13_000 U4 (IC4, IS4, IS3, IC3, PP6);
    CSA_13_0_13_6_14_000 U5 (S1, S2, IS4, IC4, PP7);
  end
endmodule

module UBPriHCA_14_7(S, X, Y, Cin);
  output UB S;
  input UB Cin;
  input UB X;
  input UB Y;
  constraint begin
    S.high = 15; S.low = 7;
    Cin.high = 7; Cin.low = 7;
    X.high = 14; X.low = 7;
    Y.high = 14; Y.low = 7;
  end
  assertion S = X + Y + Cin;
endmodule

module UBZero_7_7(O);
  output UB O;
  constraint begin
    O.high = 7; O.low = 7;
  end
  assertion O = 0;
endmodule

module UBPureHCA_14_7(S, X, Y);
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    S.high = 15; S.low = 7;
    X.high = 14; X.low = 7;
    Y.high = 14; Y.low = 7;
  end
  assertion S = X + Y;
  structure begin
    wire UB C;
    constraint begin
      C.high = 7; C.low = 7;
    end
    UBPriHCA_14_7 U0 (S, X, Y, C);
    UBZero_7_7 U1 (C);
  end
endmodule

module UB1DCON_6(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 6; O.low = 6;
    I.high = 6; I.low = 6;
  end
  assertion O = I;
endmodule

module UBCON_6_0(O, I);
  output UB O;
  input UB I;
  constraint begin
    O.high = 6; O.low = 0;
    I.high = 6; I.low = 0;
  end
  assertion O = I;
  structure begin
    UB1DCON_0 U0 (O{0}, I{0});
    UB1DCON_1 U1 (O{1}, I{1});
    UB1DCON_2 U2 (O{2}, I{2});
    UB1DCON_3 U3 (O{3}, I{3});
    UB1DCON_4 U4 (O{4}, I{4});
    UB1DCON_5 U5 (O{5}, I{5});
    UB1DCON_6 U6 (O{6}, I{6});
  end
endmodule

module UBHCA_14_7_14_0(S, X, Y);
  output UB S;
  input UB X;
  input UB Y;
  constraint begin
    S.high = 15; S.low = 0;
    X.high = 14; X.low = 7;
    Y.high = 14; Y.low = 0;
  end
  assertion S = X + Y;
  structure begin
    UBPureHCA_14_7 U0 (S{15:7}, X{14:7}, Y{14:7});
    UBCON_6_0 U1 (S{6:0}, Y{6:0});
  end
endmodule

module MultUB_STD_ARY_HC000(P, IN1, IN2);
  output UB P;
  input UB IN1;
  input UB IN2;
  constraint begin
    P.high = 15; P.low = 0;
    IN1.high = 7; IN1.low = 0;
    IN2.high = 7; IN2.low = 0;
  end
  assertion P = IN1 * IN2;
  structure begin
    wire UB PP0;
    wire UB PP1;
    wire UB PP2;
    wire UB PP3;
    wire UB PP4;
    wire UB PP5;
    wire UB PP6;
    wire UB PP7;
    wire UB S1;
    wire UB S2;
    constraint begin
      PP0.high = 7; PP0.low = 0;
      PP1.high = 8; PP1.low = 1;
      PP2.high = 9; PP2.low = 2;
      PP3.high = 10; PP3.low = 3;
      PP4.high = 11; PP4.low = 4;
      PP5.high = 12; PP5.low = 5;
      PP6.high = 13; PP6.low = 6;
      PP7.high = 14; PP7.low = 7;
      S1.high = 14; S1.low = 7;
      S2.high = 14; S2.low = 0;
    end
    UBPPG_7_0_7_0 U0 (PP0, PP1, PP2, PP3, PP4, PP5, PP6, PP7, IN1, IN2);
    UBARYACC_7_0_8_1_000 U1 (S1, S2, PP0, PP1, PP2, PP3, PP4, PP5, PP6, PP7);
    UBHCA_14_7_14_0 U2 (P, S1, S2);
  end
endmodule

